# Generated by Django 2.2.1 on 2019-06-02 12:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['artist', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.FileField(blank=True, null=True, upload_to='avatars')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='core.Artist')),
            ],
            options={
                'ordering': ['artist', 'title'],
                'unique_together': {('title', 'artist')},
            },
        ),
        migrations.CreateModel(
            name='Scrobble',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('artist_name', models.CharField(max_length=255)),
                ('track_title', models.CharField(max_length=255)),
                ('album_title', models.CharField(blank=True, max_length=255)),
                ('length', models.PositiveIntegerField(blank=True, null=True)),
                ('tracknumber', models.PositiveIntegerField(blank=True, null=True)),
                ('timestamp', models.PositiveIntegerField()),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scrobbles', to='core.Album')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scrobbles', to='core.Artist')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scrobbles', to='core.Profile')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scrobbles', to='core.Track')),
            ],
            options={
                'ordering': ['-date'],
                'default_related_name': 'scrobbles',
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='NowPlaying',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('artist_name', models.CharField(max_length=255)),
                ('track_title', models.CharField(max_length=255)),
                ('album_title', models.CharField(blank=True, max_length=255)),
                ('length', models.PositiveIntegerField(blank=True, null=True)),
                ('tracknumber', models.PositiveIntegerField(blank=True, null=True)),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nowplaying', to='core.Album')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nowplaying', to='core.Artist')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nowplaying', to='core.Profile')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nowplaying', to='core.Track')),
            ],
            options={
                'verbose_name': 'Now playing track',
                'verbose_name_plural': 'Now playing tracks',
                'ordering': ['-date'],
                'default_related_name': 'nowplaying',
            },
        ),
        migrations.CreateModel(
            name='ChartsCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('category', models.CharField(choices=[('artists', 'artists'), ('albums', 'albums'), ('tracks', 'tracks')], max_length=7)),
                ('timespan', models.CharField(choices=[('day', 'day'), ('week', 'week'), ('month', 'month'), ('year', 'year'), ('all', 'all')], max_length=5)),
                ('date', models.DateField()),
                ('toplist', models.TextField()),
                ('total_listens', models.IntegerField()),
                ('max_listen_count', models.IntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='AlbumTrackUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tracknumber', models.PositiveIntegerField(blank=True, null=True)),
                ('length', models.PositiveIntegerField(blank=True, null=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='core.Album')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='core.Track')),
            ],
            options={
                'ordering': ['album', 'tracknumber'],
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to='core.Artist'),
        ),
        migrations.AddIndex(
            model_name='scrobble',
            index=models.Index(fields=['date'], name='core_scrobb_date_f21963_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='scrobble',
            unique_together={('profile', 'timestamp')},
        ),
        migrations.AddIndex(
            model_name='chartscache',
            index=models.Index(fields=['category', 'timespan', 'date'], name='core_charts_categor_388f45_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chartscache',
            unique_together={('content_type', 'object_id', 'category', 'timespan', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='albumtrackunit',
            unique_together={('album', 'track', 'tracknumber')},
        ),
        migrations.AlterUniqueTogether(
            name='album',
            unique_together={('title', 'artist')},
        ),
    ]
